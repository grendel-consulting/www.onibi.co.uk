version: 0.2

env:
  parameter-store:
    STAGING_AWS_ACCOUNT: "/work/onibi-site/staging"
    TF_TOKEN_app_terraform_io: "/terraform/token"
  variables:
    TARGET_DIR: "infrastructure/static-site/cdktf.out/stacks/staging"
    WEBSITE_DIR: "frontend/website/dist"
    TF_CLI_CONFIG_FILE: ".terraformrc"
    TF_IN_AUTOMATION: "true"
  git-credential-helper: yes

phases:
  install:
    runtime-versions:
      nodejs: 20.x
    commands:
      - wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
      - echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
      - sudo apt update && sudo apt install terraform
      - npm install -g s3-spa-upload
  pre_build:
    commands:
      - terraform --version
  build:
    commands:
      - cd $TARGET_DIR
      - printf 'credentials "app.terraform.io" {\n token = "%s"\n}' "$TF_TOKEN_app_terraform_io" > $TF_CLI_CONFIG_FILE
      - terraform init -input=false
      - terraform validate
      - terraform apply -input=false -auto-approve
      - export CLOUDFRONT_DISTRIBUTION_ID=$(terraform output -raw cloudfront_distribution_id)
  post_build:
    commands:
      - bash -c 'if [ "$CODEBUILD_BUILD_SUCCEEDING" -eq 0 ]; then exit 1; fi'
      - export BUCKET=$(terraform output -raw bucket)
      - cd $CODEBUILD_SRC_DIR
      - aws sts assume-role --role-arn arn:aws:iam::$STAGING_AWS_ACCOUNT:role/tfc-role --role-session-name CODEBUILD_SOURCE_VERSION > credentials.json
      - export AWS_ACCESS_KEY_ID=$(jq -r .Credentials.AccessKeyId credentials.json)
      - export AWS_SECRET_ACCESS_KEY=$(jq -r .Credentials.SecretAccessKey credentials.json)
      - export AWS_SESSION_TOKEN=$(jq -r .Credentials.SessionToken credentials.json)
      - s3-spa-upload $WEBSITE_DIR $BUCKET --delete
      - aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
